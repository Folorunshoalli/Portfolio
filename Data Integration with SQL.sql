-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.assessment_id
(
    id integer,
    assess_id integer,
    asssess_date character varying,
    PRIMARY KEY (assess_id)
);

CREATE TABLE IF NOT EXISTS public.license_id
(
    assess_id integer,
    action_date character varying,
    license_num integer,
    license_name character varying,
    services character varying,
    PRIMARY KEY (license_num)
);

CREATE TABLE IF NOT EXISTS public.facility_id
(
    license_num integer,
    facility_name character varying,
    phone_num character varying,
    action_comment character varying
);

CREATE TABLE IF NOT EXISTS public.address_id
(
    license_num integer,
    address character varying,
    unit character varying,
    city character varying,
    province character varying,
    postal_code character varying
);

ALTER TABLE IF EXISTS public.license_id
    ADD FOREIGN KEY (assess_id)
    REFERENCES public.assessment_id (assess_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.facility_id
    ADD FOREIGN KEY (license_num)
    REFERENCES public.license_id (license_num) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.address_id
    ADD FOREIGN KEY (license_num)
    REFERENCES public.license_id (license_num) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;




select address, unit, city, province, postal_code
from address_id
where city = 'Kitchener'


 select license_num, facility_name, phone_num 
from facility_id
limit 10;



select ai.asssess_date, ai.assess_id, l.license_num, l.license_name, f.action_comment
from assessment_id ai
Join license_id l 
ON ai.assess_id = l.assess_id
JOIN facility_id f
ON l.license_num = f.license_num
WHERE f.action_comment = 'Met standards with some recommendations made for improvement.'





select l.license_num, l.license_name, l.services, f.action_comment, a.city, a.province
from license_id l
JOIN facility_id f
ON l.license_num = f.license_num
JOIN address_id a
ON a.license_num = l.license_num
Where l.services = 'General Ultrasound' and f.action_comment = 'Met standards.'
ORDER BY l.license_num
Limit 10;



SELECT * FROM facility_id f
WHERE f.facility_name
IN (SELECT l.license_name FROM license_id l
	WHERE f.action_comment = 'Met standards with some recommendations made for improvement.');


SELECT l.license_name, COUNT(*) AS total_licenses
FROM license_id l
GROUP BY l.license_name
ORDER BY total_licenses DESC
LIMIT 10;


SELECT ai.city, COUNT(*) AS city_count
FROM public.address_id ai
GROUP BY ai.city
ORDER BY ai.city DESC
LIMIT 10


WITH recent_assessments AS (
SELECT a.assess_id, a.asssess_date, l.license_name, l.license_num
FROM assessment_id a
JOIN license_id l
ON l.assess_id = a.assess_id
 WHERE asssess_date = '02/16/2023')
SELECT * FROM recent_assessments;


SELECT CONCAT(a.address,' ', a.unit,' ',a.city,' ', a.unit,' ', a.postal_code ) AS facility_info
FROM address_id a
LIMIT 10;

SELECT f.facility_name 
FROM facility_id f
UNION
SELECT l.license_name 
FROM license_id l
Limit 10;



